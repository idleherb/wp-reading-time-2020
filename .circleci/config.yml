version: 2.1

commands:
  restore_and_start_wp:
    description: Restore installation and start WordPress
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - checkout
      - run:
          name: Restore installation
          command: |
            cd e2e-tests
            docker-compose up -d wp-and-db-storage
            docker cp /tmp/workspace/. "$(docker-compose ps -q wp-and-db-storage)":/storage
      - run:
          name: Start WordPress
          command: |
            cd e2e-tests
            docker-compose up -d wordpress
            sleep 10

jobs:
  build:
    docker:
      - image: cimg/base:2020.01
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Install WordPress
          command: |
            cd e2e-tests
            docker-compose up wordpress-cli
      - run:
          name: Install WordPress Plugin
          command: |
            cd e2e-tests
            docker cp ../ "$(docker-compose ps -q wordpress)":/var/www/html/wp-content/plugins/my-plugin
            docker exec -ti "$(docker-compose ps -q wordpress)" \
              sh -c "cd /var/www/html/wp-content/plugins/my-plugin && \
                composer update --prefer-lowest && \
                composer install"
            docker cp "$(docker-compose ps -q wp-and-db-storage)":/storage/. /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var_www_html
            - var_lib_mysql

  linter:
    docker:
      - image: cimg/base:2020.01
    steps:
      - restore_and_start_wp
      - run:
          name: Run linter
          command: |
            cd e2e-tests
            docker exec -ti "$(docker-compose ps -q wordpress)" \
              sh -c "cd /var/www/html/wp-content/plugins/my-plugin && \
                ./vendor/bin/phpcs --report=junit --report-file=phpcs-results.xml"
      - run:
          when: always
          name: Fetch linter results
          command: |
            mkdir -p test-results/phpcs
            cd e2e-tests
            docker cp "$(docker-compose ps -q wordpress)":/var/www/html/wp-content/plugins/my-plugin/phpcs-results.xml ../test-results/phpcs/results.xml || true
      - store_test_results:
          path: test-results/phpcs

  unit_tests:
    docker:
      - image: cimg/base:2020.01
    steps:
      - restore_and_start_wp
      - run:
          name: Setup unit test environment
          command: |
            cd e2e-tests
            docker exec -ti "$(docker-compose ps -q wordpress)" \
              sh -c "cd /var/www/html/wp-content/plugins/my-plugin && \
                bash bin/install-wp-tests.sh wordpress_test root 'somewordpress' db latest"
      - run:
          name: Run unit tests
          command: |
            cd e2e-tests
            docker exec -ti "$(docker-compose ps -q wordpress)" \
              sh -c "cd /var/www/html/wp-content/plugins/my-plugin && \
                ./vendor/bin/phpunit --log-junit phpunit-results.xml"
      - run:
          when: always
          name: Fetch unit test results
          command: |
            mkdir -p test-results/phpunit
            cd e2e-tests
            docker cp "$(docker-compose ps -q wordpress)":/var/www/html/wp-content/plugins/my-plugin/phpunit-results.xml ../test-results/phpunit/results.xml || true
      - store_test_results:
          path: test-results/phpunit

  e2e_tests:
    docker:
      - image: cimg/base:2020.01
    steps:
      - restore_and_start_wp
      - run:
          name: Run e2e tests
          command: |
            cd e2e-tests
            docker-compose up --no-start e2e-test
            docker cp ./ "$(docker-compose ps -q e2e-test)":/e2e
            docker-compose run e2e-test
      - run:
          when: always
          name: Fetch e2e test results
          command: |
            mkdir -p artifacts/cypress
            mkdir -p test-results/cypress
            cd e2e-tests
            docker cp "$(docker-compose ps -q e2e-test)":/e2e/cypress cypress-results || true
            mv cypress-results/screenshots cypress-results/videos -t ../artifacts/cypress/ || true
            mv cypress-results/xml ../test-results/cypress || true
      - run:
          when: always
          name: WordPress and db logs
          command: |
            cd e2e-tests
            docker-compose logs wordpress db
      - store_artifacts:
          path: artifacts
      - store_test_results:
          path: test-results/cypress

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - linter:
          requires:
            - build
      - unit_tests:
          requires:
            - linter
      - e2e_tests:
          requires:
            - unit_tests
