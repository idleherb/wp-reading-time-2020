version: 2.1

commands:
  restore_and_start_wp:
    description: Restore installation and start WordPress
    parameters:
      mysql-version:
        type: string
        default: "5.6"
      php-version:
        type: string
        default: "7.3"
      php-unit-version:
        type: string
        default: "5.7.20"
      wp-version:
        type: string
        default: "5.4.1"
    steps:
      - attach_workspace:
          at: /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/storage
      - setup_remote_docker
      - checkout
      - run:
          name: Restore installation
          command: |
            docker-compose up -d wp-and-db-storage
            docker cp /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/storage/. "$(docker-compose ps -q wp-and-db-storage)":/storage
      - run:
          name: Start WordPress
          environment:
            - MYSQL_VERSION: << parameters.mysql-version >>
            - PHP_VERSION: << parameters.php-version >>
            - PHP_UNIT_VERSION: << parameters.php-unit-version >>
            - WP_VERSION: << parameters.wp-version >>
          command: |
            docker-compose up -d wordpress
            sleep 10

jobs:
  build:
    parameters:
      php-version:
        type: string
        default: "7.3"
      wp-version:
        type: string
        default: "5.4.1"
    docker:
      - image: cimg/base:2020.01
    environment:
      - MYSQL_VERSION: "5.6"
      - PHP_VERSION: << parameters.php-version >>
      - PHP_UNIT_VERSION: "5.7.20"
      - WP_VERSION: << parameters.wp-version >>
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Install WordPress
          command: |
            docker-compose up wordpress-cli
      - run:
          name: Install WordPress Plugin
          command: |
            echo "php unit version: ${PHP_UNIT_VERSION}"
            docker cp . "$(docker-compose ps -q wordpress)":/var/www/html/wp-content/plugins/my-plugin
            docker exec -ti "$(docker-compose ps -q wordpress)" \
              sh -c "cd /var/www/html/wp-content/plugins/my-plugin && \
                composer remove --dev phpunit/phpunit && \
                composer require --dev phpunit/phpunit ^${PHP_UNIT_VERSION} && \
                composer update --prefer-lowest && \
                composer install"
      - run:
          name: Fetch installation data
          command: |
            mkdir -p /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>
            docker cp "$(docker-compose ps -q wp-and-db-storage)":/storage/. /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/storage
      - persist_to_workspace:
          root: /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/storage
          paths:
            - var_www_html
            - var_lib_mysql

  linter:
    parameters:
      php-version:
        type: string
        default: "7.3"
      wp-version:
        type: string
        default: "5.4.1"
    docker:
      - image: cimg/base:2020.01
    steps:
      - restore_and_start_wp:
          php-version: << matrix.php-version >>
          wp-version: << matrix.wp-version >>
      - run:
          name: Run linter
          command: |
            docker exec -ti "$(docker-compose ps -q wordpress)" \
              sh -c "cd /var/www/html/wp-content/plugins/my-plugin && \
                ./vendor/bin/phpcs --report=junit --report-file=phpcs-results.xml"
      - run:
          when: always
          name: Fetch linter results
          command: |
            mkdir -p /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/phpcs
            docker cp "$(docker-compose ps -q wordpress)":/var/www/html/wp-content/plugins/my-plugin/phpcs-results.xml /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/phpcs/results.xml || true
      - store_test_results:
          path: /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/phpcs

  unit_tests:
    parameters:
      php-version:
        type: string
        default: "7.3"
      wp-version:
        type: string
        default: "5.4.1"
    docker:
      - image: cimg/base:2020.01
    steps:
      - restore_and_start_wp:
          php-version: << matrix.php-version >>
          wp-version: << matrix.wp-version >>
      - run:
          name: Setup unit test environment
          command: |
            docker exec -ti "$(docker-compose ps -q wordpress)" \
              sh -c "cd /var/www/html/wp-content/plugins/my-plugin && \
                bash bin/install-wp-tests.sh wordpress_test root 'somewordpress' db latest"
      - run:
          name: Run unit tests
          command: |
            docker exec -ti "$(docker-compose ps -q wordpress)" \
              sh -c "cd /var/www/html/wp-content/plugins/my-plugin && \
                ./vendor/bin/phpunit --log-junit phpunit-results.xml"
      - run:
          when: always
          name: Fetch unit test results
          command: |
            mkdir -p /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/phpunit
            docker cp "$(docker-compose ps -q wordpress)":/var/www/html/wp-content/plugins/my-plugin/phpunit-results.xml /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/phpunit/results.xml || true
      - store_test_results:
          path: /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/phpunit

  e2e_tests:
    parameters:
      php-version:
        type: string
        default: "7.3"
      wp-version:
        type: string
        default: "5.4.1"
    docker:
      - image: cimg/base:2020.01
    steps:
      - restore_and_start_wp
      - run:
          name: Run e2e tests
          environment:
            - MYSQL_VERSION: 5.6
            - PHP_VERSION: << parameters.php-version >>
            - PHP_UNIT_VERSION: 5.7.20
            - WP_VERSION: << parameters.wp-version >>
          command: |
            docker-compose up --no-start e2e-test
            docker cp ./e2e-tests/. "$(docker-compose ps -q e2e-test)":/e2e
            docker-compose run e2e-test
      - run:
          when: always
          name: Fetch e2e test results
          command: |
            mkdir -p /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/artifacts/cypress
            mkdir -p /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/cypress
            docker cp "$(docker-compose ps -q e2e-test)":/e2e/cypress cypress-results || true
            mv cypress-results/screenshots cypress-results/videos -t /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/artifacts/cypress/ || true
            mv cypress-results/xml /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/cypress || true
      - store_artifacts:
          path: /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/artifacts
      - store_test_results:
          path: /tmp/workspace/wp<< matrix.wp-version >>-php<< matrix.php-version >>/test-results/cypress

workflows:
  build_and_test:
    jobs:
      - build:
          name: build-wp<< matrix.wp-version >>-php<< matrix.bar >>
          matrix:
            parameters:
              foo: ["4.9", "5.4.1"]
              php-version: ["5.6", "7.0", "7.1", "7.2", "7.3"]
            exclude:
              - wp-version: "5.4.1"
                php-version: "5.6"
              - wp-version: "5.4.1"
                php-version: "7.0"
              - wp-version: "5.4.1"
                php-version: "7.1"
              - wp-version: "4.9"
                php-version: "7.3"
      - linter:
          wp-version: "5.4.1"
          php-version: "7.3"
          requires:
            - build-wp5.4.1-php7.3
      - unit_tests:
          wp-version: "5.4.1"
          php-version: "7.3"
          requires:
            - linter
      - e2e_tests:
          name: e2e-tests-wp<< matrix.wp-version >>-php<< matrix.php-version >>
          matrix:
            parameters:
              wp-version: ["4.9", "5.4.1"]
              php-version: ["5.6", "7.2", "7.3"]
            exclude:
              - wp-version: "5.4.1"
                php-version: "5.6"
              - wp-version: "4.9"
                php-version: "7.3"
          requires:
            - unit_tests
            - build-wp<< matrix.wp-version >>-php<< matrix.php-version >>
